openapi: "3.0.3"
info:
  title: Space Server API
  description: Space Server API
  version: "1.0.0"
servers:
- url: "/api/v1"
paths:
  /login:
    post:
      summary: Create a session cookie
      tags:
        - Auth
      requestBody:
        required: true
        content:
          x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "401":
          description: Unauthorized. Wrong credentials
        "200":
          description: OK
  /logout:
    get:
      summary: Log out of current session
      tags:
        - Auth
      responses:
        "200":
          description: OK

  /upload:
    post:
      summary: Upload a file to be imported
      tags:
        - Upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
        "401":
          $ref: "#/components/responses/Unauthorized"

  /import/doc:
    get:
      summary: Get all import documents
      tags:
        - Import Document
      responses:
        "200":
          description: Returns a list of all import documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ImportDocument"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/doc/{guid}:
    parameters:
      - in: path
        name: guid
        required: true
        schema:
          type: string
        description: GUID of import document
    get:
      summary: Get a specific import document
      tags:
        - Import Document
      responses:
        "200":
          description: Returns the specified import document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportDocument"
        "404":
          description: Import document not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      summary: Update a specific import document
      tags:
        - Import Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportDocument"
      responses:
        "200":
          description: Import document updated successfully
        "404":
          description: Import document not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Delete a specific import document
      tags:
        - Import Document
      responses:
        "200":
          description: Import document deleted successfully
        "404":
          description: Import document not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/doc/{guid}/pdf:
    parameters:
      - in: path
        name: guid
        required: true
        schema:
          type: string
        description: GUID of the Import document
    get:
      summary: Get the original PDF of the Import document
      tags:
        - Import Document
      responses:
        "200":
          description: Returns the original PDF
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        "404":
          description: Import document not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/doc/{guid}/edit/complete:
    parameters:
      - in: path
        name: guid
        required: true
        schema:
          type: string
        description: GUID of the Import
      - in: query
        name: deskew
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 100
          default: 40
        description: deskew value
      - in: query
        name: colorFuzz
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 100
          default: 10
        description: fuzz value for removing background color
      - in: query
        name: cropFuzz
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 100
          default: 20
        description: fuzz value for cropping background
    post:
      summary: Run image editing on all pages and create new thumbnails
      tags:
        - Import Document
      responses:
        "200":
          description: Operation successfull
        "404":
          description: Import not found
        "401":
          $ref: "#/components/responses/Unauthorized"

  /import/page/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of import page
    get:
      summary: Get a specific import page
      tags:
        - Import Page
      responses:
        "200":
          description: Returns the specified import page
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportPage"
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      summary: Update a specific import page
      tags:
        - Import Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportPage"
      responses:
        "200":
          description: Import page updated successfully
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Delete a specific import page
      tags:
        - Import Page
      responses:
        "200":
          description: Import page deleted successfully
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/page/{id}/img:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of the Import page
      - in: query
        name: type
        required: false
        schema:
          type: string
          enum:
            - original
            - deskewed
            - color
            - final
          default: final
        description: "the image type"
    get:
      summary: Get the Image for the specified type
      tags:
        - Import Page
      responses:
        "200":
          description: Returns the Image
          content:
            image/png:
              schema:
                type: string
                format: binary
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/page/{id}/thumb:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of the Import page
      - in: query
        name: size
        required: false
        schema:
          type: integer
          enum:
            - 128
            - 256
            - 512
          default: 512
        description: the size of the thumbnail
    get:
      summary: Get the thumbnail for the specified size
      tags:
        - Import Page
      responses:
        "200":
          description: Returns the Thumbnail
          content:
            image/png:
              schema:
                type: string
                format: binary
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/page/{id}/edit/deskew:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of the import page
      - in: query
        name: deskew
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 100
          default: 40
        description: deskew value
    post:
      summary: Run deskew on original image of page
      tags:
        - Import Page
      responses:
        "200":
          description: Operation successfull
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/page/{id}/edit/color:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of the import page
      - in: query
        name: fuzz
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 100
          default: 10
        description: fuzz value for removing background color
    post:
      summary: Run color adjustments on deskewed image of page
      tags:
        - Import Page
      responses:
        "200":
          description: Operation successfull
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/page/{id}/edit/crop:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of the import page
      - in: query
        name: fuzz
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 100
          default: 20
        description: fuzz value for cropping background
    post:
      summary: Run background removal on color adjusted image of page
      tags:
        - Import Page
      responses:
        "200":
          description: Operation successfull
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/page/{id}/edit/thumbs:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of the import page
    post:
      summary: Create thumbnails for page
      tags:
        - Import Page
      responses:
        "200":
          description: Operation successfull
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"

  /import/block/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of import block
    get:
      summary: Get a specific import block
      tags:
        - Import Block
      responses:
        "200":
          description: Returns the specified import block
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportBlock"
        "404":
          description: Import block not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      summary: Update a specific import block
      tags:
        - Import Block
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportBlock"
      responses:
        "200":
          description: Import block updated successfully
        "404":
          description: Import block not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Delete a specific import block
      tags:
        - Import Block
      responses:
        "200":
          description: Import block deleted successfully
        "404":
          description: Import block not found
        "401":
          $ref: "#/components/responses/Unauthorized"

  /import/line/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of import line
    get:
      summary: Get a specific import line
      tags:
        - Import Line
      responses:
        "200":
          description: Returns the specified import line
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportLine"
        "404":
          description: Import line not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      summary: Update a specific import line
      tags:
        - Import Line
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportLine"
      responses:
        "200":
          description: Import line updated successfully
        "404":
          description: Import line not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Delete a specific import line
      tags:
        - Import Line
      responses:
        "200":
          description: Import line deleted successfully
        "404":
          description: Import line not found
        "401":
          $ref: "#/components/responses/Unauthorized"

  /import/word/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of import word
    get:
      summary: Get a specific import word
      tags:
        - Import Word
      responses:
        "200":
          description: Returns the specified import word
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportWord"
        "404":
          description: Import word not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      summary: Update a specific import word
      tags:
        - Import Word
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportWord"
      responses:
        "200":
          description: Import word updated successfully
        "404":
          description: Import word not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Delete a specific import word
      tags:
        - Import Word
      responses:
        "200":
          description: Import word deleted successfully
        "404":
          description: Import word not found
        "401":
          $ref: "#/components/responses/Unauthorized"

  /users:
    get:
      summary: Get all users
      tags:
        - Users
      responses:
        "200":
          description: Returns a list of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      summary: Update an existing user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: OK
        "400":
          description: User does not exist
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          description: Not allowed to update other users - can only be done by admin

  /users/{username}:
    parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
        description: Username of user
    get:
      summary: Get a specific user
      tags:
        - Users
      responses:
        "200":
          description: Returns the specified user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Delete a specific user
      tags:
        - Users
      responses:
        "200":
          description: User deleted successfully
        "404":
          description: User not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /users/password:
    post:
      summary: Change password for current Session-User
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PasswordChangeRequest"
      responses:
        "200":
          description: OK
        "400":
          description: Empty password
        "401":
          $ref: "#/components/responses/Unauthorized"

components:
  schemas:
    PasswordChangeRequest:
      type: object
      properties:
        old:
          type: string
        new:
          type: string
      required:
        - old
        - new
    NameChangeRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    User:
      type: object
      properties:
        username:
          type: string
        name:
          type: string
        admin:
          type: boolean
          description: Read-only property - Changes get ignored
        createdAt:
          $ref: "#/components/schemas/LocalDateTime"
        updatedAt:
          $ref: "#/components/schemas/LocalDateTime"
      required:
        - username
        - createdAt

    ImportDocument:
      type: object
      properties:
        guid:
          type: string
        ocrLanguage:
          type: string
        date:
          $ref: "#/components/schemas/LocalDate"
        createdAt:
          $ref: "#/components/schemas/LocalDateTime"
        updatedAt:
          $ref: "#/components/schemas/LocalDateTime"
      required:
        - guid
        - createdAt

    ImportPage:
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
        page:
          type: integer
        width:
          type: integer
        height:
          type: integer
        deskew:
          type: integer
        colorFuzz:
          type: integer
        cropFuzz:
          type: integer
        documentGuid:
          type: string
      required:
        - id
        - text
        - page
        - width
        - height
        - documentGuid

    ImportBlock:
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
        x:
          type: integer
        y:
          type: integer
        width:
          type: integer
        height:
          type: integer
      required:
        - id
        - text
        - x
        - y
        - width
        - height

    ImportLine:
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
        x:
          type: integer
        y:
          type: integer
        width:
          type: integer
        height:
          type: integer
      required:
        - id
        - text
        - x
        - y
        - width
        - height

    ImportWord:
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
        x:
          type: integer
        y:
          type: integer
        width:
          type: integer
        height:
          type: integer
        ocrConfidence:
          type: number
      required:
        - id
        - text
        - x
        - y
        - width
        - height

    LocalDateTime:
      type: array
      items:
        type: integer

    LocalDate:
      type: array
      items:
        type: integer

  responses:
    Unauthorized:
      description: Unauthorized