openapi: "3.0.3"
info:
  title: Space Server API
  description: Space Server API
  version: "1.0.0"
servers:
- url: "/api/v1"
paths:
  /login:
    post:
      summary: Create a session cookie
      tags:
        - Auth
      requestBody:
        required: true
        content:
          x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "401":
          description: Unauthorized. Wrong credentials
        "200":
          description: OK
  /logout:
    get:
      summary: Log out of current session
      tags:
        - Auth
      responses:
        "200":
          description: OK

  /upload:
    post:
      summary: Upload a file to be imported
      tags:
        - Upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
        "401":
          $ref: "#/components/responses/Unauthorized"
  /upload/collect:
    post:
      summary: Start collection of uploaded files
      tags:
        - Upload
      responses:
        "200":
          description: OK
        "401":
          $ref: "#/components/responses/Unauthorized"

  /import/doc:
    get:
      summary: Get all import documents
      tags:
        - Import Document
      responses:
        "200":
          description: Returns a list of all import documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ImportDocument"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/doc/{id}:
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Get a specific import document
      tags:
        - Import Document
      responses:
        "200":
          description: Returns the specified import document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportDocument"
        "404":
          description: Import document not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      summary: Update a specific import document
      tags:
        - Import Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportDocument"
      responses:
        "200":
          description: Import document updated successfully
        "404":
          description: Import document not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Delete a specific import document
      tags:
        - Import Document
      responses:
        "200":
          description: Import document deleted successfully
        "404":
          description: Import document not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/doc/{id}/pdf:
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Get the original PDF of the Import document
      tags:
        - Import Document
      responses:
        "200":
          description: Returns the original PDF
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        "404":
          description: Import document not found
        "401":
          $ref: "#/components/responses/Unauthorized"

  /import/page/{id}:
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Get a specific import page
      tags:
        - Import Page
      responses:
        "200":
          description: Returns the specified import page
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportPage"
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      summary: Update a specific import page
      tags:
        - Import Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportPage"
      responses:
        "200":
          description: Import page updated successfully
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Delete a specific import page
      tags:
        - Import Page
      responses:
        "200":
          description: Import page deleted successfully
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/page/{id}/blocks:
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Get all blocks, lines, and words for this page
      tags:
        - Import Page
      responses:
        "200":
          description: Returns a list of blocks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ImportBlockFull"
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/page/{id}/img:
    parameters:
      - $ref: "#/components/parameters/idParam"
      - in: query
        name: type
        required: false
        schema:
          type: string
          enum: [original, cleaned]
          default: cleaned
        description: "the image type"
    get:
      summary: Get the Image for the specified type
      tags:
        - Import Page
      responses:
        "200":
          description: Returns the Image
          content:
            image/png:
              schema:
                type: string
                format: binary
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/page/{id}/thumb:
    parameters:
      - $ref: "#/components/parameters/idParam"
      - in: query
        name: size
        required: false
        schema:
          type: string
          enum:
            - 128
            - 128x128
            - 256
            - 256x256
            - 512
            - 512x512
          default: 512x512
        description: the size of the thumbnail
    get:
      summary: Get the thumbnail for the specified size
      tags:
        - Import Page
      responses:
        "200":
          description: Returns the Thumbnail
          content:
            image/png:
              schema:
                type: string
                format: binary
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/page/{id}/text:
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Get the text for the page
      tags:
        - Import Page
      responses:
        "200":
          description: Returns the text
          content:
            text/plain:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/page/{id}/edit/clean:
    parameters:
      - $ref: "#/components/parameters/idParam"
    post:
      summary: Run 'textcleaner' on image
      tags:
        - Import Page
      responses:
        "200":
          description: Operation successfull
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/page/{id}/edit/thumbs:
    parameters:
      - $ref: "#/components/parameters/idParam"
    post:
      summary: Create thumbnails for page
      tags:
        - Import Page
      responses:
        "200":
          description: Operation successfull
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/page/{id}/ocr/full:
    parameters:
      - $ref: "#/components/parameters/idParam"
    post:
      summary: Run OCR on page
      tags:
        - Import Page
      responses:
        "200":
          description: Operation successfull
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/page/{id}/ocr/part:
    parameters:
      - $ref: "#/components/parameters/idParam"
    post:
      summary: Run OCR on provided area
      tags:
        - Import Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rectangle"
      responses:
        "200":
          description: Operation successfull
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/page/{id}/word:
    parameters:
      - $ref: "#/components/parameters/idParam"
    post:
      summary: Add a new word to the page
      tags:
        - Import Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewWord"
      responses:
        "200":
          description: Operation successfull
        "404":
          description: Import page not found
        "401":
          $ref: "#/components/responses/Unauthorized"

  /import/block/{id}:
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Get a specific import block
      tags:
        - Import Block
      responses:
        "200":
          description: Returns the specified import block
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportBlock"
        "404":
          description: Import block not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Delete a specific import block
      tags:
        - Import Block
      responses:
        "200":
          description: Import block deleted successfully
        "404":
          description: Import block not found
        "401":
          $ref: "#/components/responses/Unauthorized"

  /import/line/{id}:
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Get a specific import line
      tags:
        - Import Line
      responses:
        "200":
          description: Returns the specified import line
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportLine"
        "404":
          description: Import line not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Delete a specific import line
      tags:
        - Import Line
      responses:
        "200":
          description: Import line deleted successfully
        "404":
          description: Import line not found
        "401":
          $ref: "#/components/responses/Unauthorized"

  /import/word/{id}:
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Get a specific import word
      tags:
        - Import Word
      responses:
        "200":
          description: Returns the specified import word
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportWord"
        "404":
          description: Import word not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Delete a specific import word
      tags:
        - Import Word
      responses:
        "200":
          description: Import word deleted successfully
        "404":
          description: Import word not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /import/word/{id}/text:
    parameters:
      - $ref: "#/components/parameters/idParam"
    post:
      summary: Update the text of a import word
      tags:
        - Import Word
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        "200":
          description: Import word updated successfully
        "404":
          description: Import word not found
        "401":
          $ref: "#/components/responses/Unauthorized"

  /users:
    get:
      summary: Get all users
      tags:
        - Users
      responses:
        "200":
          description: Returns a list of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      summary: Update an existing user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: OK
        "400":
          description: User does not exist
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          description: Not allowed to update other users - can only be done by admin

  /users/{username}:
    parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
        description: Username of user
    get:
      summary: Get a specific user
      tags:
        - Users
      responses:
        "200":
          description: Returns the specified user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Delete a specific user
      tags:
        - Users
      responses:
        "200":
          description: User deleted successfully
        "404":
          description: User not found
        "401":
          $ref: "#/components/responses/Unauthorized"
  /users/password:
    post:
      summary: Change password for current Session-User
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PasswordChangeRequest"
      responses:
        "200":
          description: OK
        "400":
          description: Empty password
        "401":
          $ref: "#/components/responses/Unauthorized"

components:
  schemas:
    PasswordChangeRequest:
      type: object
      properties:
        old:
          type: string
        new:
          type: string
      required:
        - old
        - new
    NameChangeRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    User:
      type: object
      properties:
        username:
          type: string
        name:
          type: string
        admin:
          type: boolean
          description: Read-only property - Changes get ignored
        createdAt:
          $ref: "#/components/schemas/LocalDateTime"
        updatedAt:
          $ref: "#/components/schemas/LocalDateTime"
      required:
        - username
        - createdAt

    ImportDocument:
      type: object
      properties:
        id:
          type: integer
          minimum: 0
        guid:
          type: string
        language:
          type: string
        date:
          $ref: "#/components/schemas/LocalDate"
        createdAt:
          $ref: "#/components/schemas/LocalDateTime"
        updatedAt:
          $ref: "#/components/schemas/LocalDateTime"
        pages:
          type: array
          items:
            $ref: "#/components/schemas/ImportDocumentPage"
      required:
        - guid
        - createdAt

    ImportDocumentPage:
      type: object
      properties:
        page:
          type: integer
        id:
          type: integer

    ImportPage:
      type: object
      properties:
        id:
          type: integer
        page:
          type: integer
        width:
          type: integer
        height:
          type: integer
        layout:
          type: string
          enum: [portrait, landscape]
        crop:
          $ref: "#/components/schemas/ImportPageCrop"
        grayscale:
          type: boolean
          default: false
        enhance:
          type: boolean
          default: true
        backgroundFilter:
          type: integer
          minimum: 1
          default: 15
        noiseFilter:
          type: integer
          minimum: 0
          default: 5
        unrotate:
          type: boolean
          default: true
        preserveSize:
          type: boolean
          default: false
        textSmoothing:
          type: integer
          minimum: 0
          maximum: 100
          nullable: true
        trimBackground:
          type: boolean
          default: true
        borderPadding:
          type: integer
          minimum: 0
          default: 0
        documentId:
          type: integer
        blocks:
          type: array
          items:
            type: integer
      required:
        - id
        - page
        - width
        - height
        - documentId

    ImportPageCrop:
      type: object
      properties:
        left:
          type: integer
          minimum: 0
        top:
          type: integer
          minimum: 0
        right:
          type: integer
          minimum: 0
        bottom:
          type: integer
          minimum: 0
      required:
        - left
        - top
        - right
        - bottom

    ImportBlock:
      type: object
      properties:
        id:
          type: integer
        x:
          type: integer
        y:
          type: integer
        width:
          type: integer
        height:
          type: integer
        lines:
          type: array
          items:
            type: integer
      required:
        - id
        - x
        - y
        - width
        - height

    ImportBlockFull:
      type: object
      properties:
        id:
          type: integer
        x:
          type: integer
        y:
          type: integer
        width:
          type: integer
        height:
          type: integer
        lines:
          type: array
          items:
            $ref: "#/components/schemas/ImportLineFull"
      required:
        - id
        - x
        - y
        - width
        - height

    ImportLine:
      type: object
      properties:
        id:
          type: integer
        x:
          type: integer
        y:
          type: integer
        width:
          type: integer
        height:
          type: integer
        words:
          type: array
          items:
            type: integer
      required:
        - id
        - x
        - y
        - width
        - height

    ImportLineFull:
      type: object
      properties:
        id:
          type: integer
        x:
          type: integer
        y:
          type: integer
        width:
          type: integer
        height:
          type: integer
        words:
          type: array
          items:
            $ref: "#/components/schemas/ImportWord"
      required:
        - id
        - x
        - y
        - width
        - height

    ImportWord:
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
        x:
          type: integer
        y:
          type: integer
        width:
          type: integer
        height:
          type: integer
        ocrConfidence:
          type: number
        spellingSuggestions:
          type: array
          items:
            $ref: "#/components/schemas/ImportSpellingSuggestion"
        lineId:
          type: integer
      required:
        - id
        - text
        - x
        - y
        - width
        - height
        - lineId

    NewWord:
      type: object
      properties:
        text:
          type: string
        x:
          type: integer
        y:
          type: integer
        width:
          type: integer
        height:
          type: integer
      required:
        - text
        - x
        - y
        - width
        - height

    ImportSpellingSuggestion:
      type: object
      properties:
        id:
          type: integer
        suggestion:
          type: string
      required:
        - id
        - suggestion

    Rectangle:
      type: object
      properties:
        x:
          type: integer
          minimum: 0
        y:
          type: integer
          minimum: 0
        width:
          type: integer
          minimum: 0
        height:
          type: integer
          minimum: 0
      required:
        - x
        - y
        - width
        - height

    LocalDateTime:
      type: array
      items:
        type: integer

    LocalDate:
      type: array
      items:
        type: integer

  responses:
    Unauthorized:
      description: Unauthorized

  parameters:
    idParam:
      in: path
      name: id
      required: true
      schema:
        type: integer
        minimum: 0
      description: the ID of the object