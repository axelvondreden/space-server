openapi: "3.0.3"
info:
  title: Space Server API
  description: Space Server API
  version: "1.0.0"
servers:
- url: "/api/v1"
paths:
  /login:
    post:
      summary: Create a session cookie
      tags:
        - Auth
      requestBody:
        required: true
        content:
          x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "401":
          description: Unauthorized. Wrong credentials
        "200":
          description: OK
  /logout:
    get:
      summary: Log out of current session
      tags:
        - Auth
      responses:
        "200":
          description: OK

  /hello:
    get:
      summary: Test Endpoint
      tags:
        - Auth
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/Unauthorized"

  /upload:
    post:
      summary: Upload a file to be imported
      tags:
        - Imports
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/Unauthorized"

  /imports:
    get:
      summary: Get all imports
      tags:
        - Imports
      responses:
        "200":
          description: Returns a list of all imports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Import"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      summary: Creates a new import
      tags:
        - Imports
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Import"
      responses:
        "201":
          description: GUID of the import
          content:
            text/plain:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/Unauthorized"

  /imports/{guid}:
    parameters:
      - in: path
        name: guid
        required: true
        schema:
          type: string
        description: GUID of import
    get:
      summary: Get a specific import
      tags:
        - Imports
      responses:
        "200":
          description: Returns the specified import
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Import"
        "404":
          description: Import not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      summary: Update a specific import
      tags:
        - Imports
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Import"
      responses:
        "200":
          description: Import updated successfully
        "404":
          description: Import not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Delete a specific import
      tags:
        - Imports
      responses:
        "200":
          description: Import deleted successfully
        "404":
          description: Import not found
        "401":
          $ref: "#/components/responses/Unauthorized"

  /documents:
    get:
      summary: Get all documents
      tags:
        - Documents
      responses:
        "200":
          description: Returns a list of all documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Document"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      summary: Creates a new empty document
      tags:
        - Documents
      responses:
        "201":
          description: GUID of the document
          content:
            text/plain:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/Unauthorized"

  /documents/{guid}:
    parameters:
      - in: path
        name: guid
        required: true
        schema:
          type: string
        description: GUID of document
    get:
      summary: Get a specific document
      tags:
        - Documents
      responses:
        "200":
          description: Returns the specified document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        "404":
          description: Document not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      summary: Update a specific document
      tags:
        - Documents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        "200":
          description: Document updated successfully
        "404":
          description: Document not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Delete a specific document
      tags:
        - Documents
      responses:
        "200":
          description: Document deleted successfully
        "404":
          description: Document not found
        "401":
          $ref: "#/components/responses/Unauthorized"

  /users:
    get:
      summary: Get all users
      tags:
        - Users
      responses:
        "200":
          description: Returns a list of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /users/{username}:
    parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
        description: Username of user
    get:
      summary: Get a specific user
      tags:
        - Users
      responses:
        "200":
          description: Returns the specified user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      summary: Update a specific user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User updated successfully
        "404":
          description: User not found
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Delete a specific user
      tags:
        - Users
      responses:
        "200":
          description: User deleted successfully
        "404":
          description: User not found
        "401":
          $ref: "#/components/responses/Unauthorized"

components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        name:
          type: string
        createdAt:
          type: integer
        updatedAt:
          type: integer
      required:
        - username
        - createdAt

    Document:
      type: object
      properties:
        id:
          type: integer
        guid:
          type: string
        createdAt:
          type: integer
        updatedAt:
          type: integer
      required:
        - id
        - guid
        - createdAt

    Import:
      type: object
      properties:
        id:
          type: integer
        guid:
          type: string
        file:
          type: string
        type:
          type: string
        createdAt:
          type: integer
        updatedAt:
          type: integer
      required:
        - id
        - guid
        - file
        - type
        - createdAt

  responses:
    Unauthorized:
      description: Unauthorized
      content:
        '*/*':
          schema:
            type: object